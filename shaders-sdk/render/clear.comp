#version 450

#extension GL_ARB_separate_shader_objects : require
#extension GL_ARB_shading_language_420pack : require


#include "../include/structs.glsl"
#include "../include/constants.glsl"
#include "../include/uniforms.glsl"
#include "../include/fast_math.glsl"
#include "../include/rays.glsl"

layout ( binding=0, r32ui ) uniform uimage2D sampleflags;
layout ( local_size_x = RENDERER_CU, local_size_y = 1, local_size_z = 1) in;

void main()
{
    int offT = int(gl_GlobalInvocationID.x);
    int t = offT;

    if (t >= samplerUniform.samplecount) return;
    
    ivec2 wh = ivec2(imageSize(sampleflags).xy);
    imageStore(sampleflags, ivec2(t % wh.x, t / wh.x), uvec4(1));
}
